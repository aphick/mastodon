- content_for :page_title do
  = @instance.domain

- content_for :header_tags do
  = javascript_pack_tag 'admin', async: true, crossorigin: 'anonymous'

- content_for :heading_actions do
  = l(@time_period.first)
  = ' - '
  = l(@time_period.last)

.dashboard
  .dashboard__item
    = react_admin_component :counter, measure: 'instance_accounts', start_at: @time_period.first, end_at: @time_period.last, params: { domain: @instance.domain }, label: t('admin.instances.dashboard.instance_accounts_measure'), href: admin_accounts_path(origin: 'remote', by_domain: @instance.domain)
  .dashboard__item
    = react_admin_component :counter, measure: 'instance_statuses', start_at: @time_period.first, end_at: @time_period.last, params: { domain: @instance.domain }, label: t('admin.instances.dashboard.instance_statuses_measure')
  .dashboard__item
    = react_admin_component :counter, measure: 'instance_media_attachments', start_at: @time_period.first, end_at: @time_period.last, params: { domain: @instance.domain }, label: t('admin.instances.dashboard.instance_media_attachments_measure')
  .dashboard__item
    = react_admin_component :counter, measure: 'instance_follows', start_at: @time_period.first, end_at: @time_period.last, params: { domain: @instance.domain }, label: t('admin.instances.dashboard.instance_follows_measure')
  .dashboard__item
    = react_admin_component :counter, measure: 'instance_followers', start_at: @time_period.first, end_at: @time_period.last, params: { domain: @instance.domain }, label: t('admin.instances.dashboard.instance_followers_measure')
  .dashboard__item
    = react_admin_component :counter, measure: 'instance_reports', start_at: @time_period.first, end_at: @time_period.last, params: { domain: @instance.domain }, label: t('admin.instances.dashboard.instance_reports_measure'), href: admin_reports_path(by_target_domain: @instance.domain)
  .dashboard__item
    = react_admin_component :dimension, dimension: 'instance_accounts', start_at: @time_period.first, end_at: @time_period.last, params: { domain: @instance.domain }, limit: 8, label: t('admin.instances.dashboard.instance_accounts_dimension')
  .dashboard__item
    = react_admin_component :dimension, dimension: 'instance_languages', start_at: @time_period.first, end_at: @time_period.last, params: { domain: @instance.domain }, limit: 8, label: t('admin.instances.dashboard.instance_languages_dimension')

%hr.spacer/

%h3= t('admin.instances.content_policies.title')

%p= t('admin.instances.content_policies.description_html')

- if @instance.domain_allow
  = link_to t('admin.domain_allows.undo'), admin_domain_allow_path(@instance.domain_allow), class: 'button button--destructive', data: { confirm: t('admin.accounts.are_you_sure'), method: :delete }
- elsif @instance.domain_block
  = link_to t('admin.domain_blocks.edit'), edit_admin_domain_block_path(@instance.domain_block), class: 'button'
  = link_to t('admin.domain_blocks.undo'), admin_domain_block_path(@instance.domain_block), class: 'button'
- else
  = link_to t('admin.domain_blocks.add_new'), new_admin_domain_block_path(_domain: @instance.domain), class: 'button'

%hr.spacer/

%h3= t('admin.instances.availability.title')

%p
  = t('admin.instances.availability.description_html', count: DeliveryFailureTracker::FAILURE_DAYS_THRESHOLD)

.availability-indicator
  %ul.availability-indicator__graphic
    - failure_date_map = @exhausted_deliveries_days.index_with { true }
    - graph_end_at = @exhausted_deliveries_days.last || Time.now.utc.to_date
    - ((graph_end_at - 14.days)..graph_end_at).each do |date|
      %li.availability-indicator__graphic__item{ class: @instance.unavailable? || failure_date_map[date] ? 'negative' : 'positive', title: l(date) }
  .availability-indicator__hint
    - if @instance.unavailable?
      %span.negative-hint
        = t('admin.instances.availability.failure_threshold_reached', date: l(@instance.unavailable_domain.created_at.to_date))
        = link_to t('admin.instances.delivery.restart'), restart_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post }
    - elsif @exhausted_deliveries_days.empty?
      %span.positive-hint
        = t('admin.instances.availability.no_failures_recorded')
        = link_to t('admin.instances.delivery.stop'), stop_delivery_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post }
    - else
      %span.negative-hint
        = t('admin.instances.availability.failures_recorded', count: @instance.delivery_failure_tracker.days)
        = link_to t('admin.instances.delivery.clear'), clear_delivery_errors_admin_instance_path(@instance), data: { confirm: t('admin.accounts.are_you_sure'), method: :post } unless @exhausted_deliveries_days.empty?

- if @instance.purgeable?
  %h3= t('admin.instances.purge')

  %p= t('admin.instances.purge_description_html')

  = link_to t('admin.instances.purge'), admin_instance_path(@instance), data: { confirm: t('admin.instances.confirm_purge'), method: :delete }, class: 'button button--destructive'
